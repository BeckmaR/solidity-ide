module com.yakindu.solidity.GenerateSolidity

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var projectName = "com.yakindu.solidity"
var runtimeProject = "../${projectName}"
Workflow {
	
	
	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		scanClassPath = true
		platformUri = "${runtimeProject}/.."
		registerGenModelFile = "platform:/resource/org.yakindu.base.types/model/base.genmodel"
		registerGenModelFile = "platform:/resource/org.yakindu.base.types/model/types.genmodel"
		registerGenModelFile = "platform:/resource/org.yakindu.base.expressions/model/Expressions.genmodel"
		registerEcoreFile = "platform:/resource/org.yakindu.base.types/model/base.ecore"
		registerEcoreFile = "platform:/resource/org.yakindu.base.types/model/types.ecore"
		registerEcoreFile = "platform:/resource/org.yakindu.base.expressions/model/Expressions.ecore"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.yakindu.solidity"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
			
		}
		language = StandardLanguage {
			name = "com.yakindu.solidity.Solidity"
			fileExtensions = "sol"
			serializer = {
				generateStub = false
			}
			validator = {
			// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
